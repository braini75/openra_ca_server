name: Create OpenRA CA Docker Image CI
description: Build and push the OpenRA CA Docker image on a schedule or manually

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'OpenRA CA version to build'
        required: false
        default: ''
  schedule:    # description: 'Build and push the OpenRA CA Docker image every day at 21:21 UTC'
    - cron: '21 21 * * *'      

permissions:
  contents: write
  packages: write

jobs:  
  prepare:
    runs-on: ubuntu-latest    

    outputs:
      ca_version: ${{ steps.version_check.outputs.ca_version }}
      new_release: ${{ steps.version_exists.outputs.new_release }}

    steps:
    - name: Set OpenRA-CA version and check if versions match
      id: version_check
      run: |
        if [ "${{ github.event.inputs.version }}" != "" ]; then
          # Read version from user input
          OPENRA_CA_VERSION=${{ github.event.inputs.version }}
        else
          # Extract release version from CAMod repo
          OPENRA_CA_VERSION=$(curl --silent "https://api.github.com/repos/Inq8/CAmod/releases/latest" | jq -r '.tag_name' | cut -d'-' -f2-)
        fi
        echo "ca_version=$OPENRA_CA_VERSION" >> "$GITHUB_OUTPUT"
        echo "ca_version=$OPENRA_CA_VERSION"

    - name: Check if version already exists
      id: version_exists
      run: |
        if docker manifest inspect ghcr.io/${{ github.repository }}:${{ steps.version_check.outputs.ca_version }} > /dev/null 2>&1; then
          echo "new_release=false" >> "$GITHUB_OUTPUT"
        else
          echo "new_release=true" >> "$GITHUB_OUTPUT"
        fi

  push:
    runs-on: ubuntu-latest
    needs: prepare

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        install: true

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: check env
      env:
        NEW_RELEASE: ${{ needs.prepare.outputs.new_release }}
        CA_VERSION: ${{ needs.prepare.outputs.ca_version }}
      run: |
        echo "NEW_RELEASE=$NEW_RELEASE, OPENRA_CA_VERSION=$CA_VERSION"
        echo "env.NEW_RELEASE=${{ env.NEW_RELEASE }}"
        echo "env.OPENRA_CA_VERSION=${{ env.CA_VERSION }}"
        echo "github.repository=${{ github.repository }}"

    - name: Build and push Docker image
      env:
        NEW_RELEASE: ${{ needs.prepare.outputs.new_release }}
        CA_VERSION: ${{ needs.prepare.outputs.ca_version }}    
      if: ${{ env.NEW_RELEASE == 'true' }}
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        provenance: false
        tags: |
          ghcr.io/${{ github.repository }}:${{ env.CA_VERSION }}
          ghcr.io/${{ github.repository }}:latest
        build-args: |
          OPENRA_CA_VERSION=${{ env.CA_VERSION }}
        platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
        labels: |
          org.opencontainers.image.version=${{ env.CA_VERSION }}
          org.opencontainers.image.description="Image to run a dedicated server instance for OpenRA CAmod"